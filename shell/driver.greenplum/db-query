#!/usr/bin/env bash
# db-query -- Evaluates given SQL query against the PostgreSQL database configured for a DeepDive application
# > eval "$(db-parse "$url")"
# > db-query SQL FORMAT HEADER
##
set -eu

sql=${1:?No SQL given}; shift
format=${1:?No FORMAT given}; shift
header=${1:?No HEADER given}; shift

copy_option=
case $header in
    0) ;;
    1) copy_option+=" HEADER" ;;
    *) error "$header: unrecognized value for HEADER"
esac
case $format in
    tsv) ;;
    csv) copy_option+=" csv" ;;
    json)
        types="$(db-prompt -c "CREATE TEMP TABLE __to_json_temp AS ($sql) LIMIT 0;
            COPY (SELECT format_type(atttypid, atttypmod) AS type
            FROM pg_attribute
            WHERE attrelid = '__to_json_temp'::regclass
            AND attnum > 0
            AND NOT attisdropped
            ORDER BY attnum) TO STDOUT" | tr '\n' ',' | sed 's/,$//')"
        db-query "$sql" csv 1 | csvtojson.py "$types"
        exit $?
        ;;
    *) error "$format: unsupported format by Greenplum driver" ;; # TODO
esac

exec db-prompt -c "COPY ($sql) TO STDOUT${copy_option:+ $copy_option}" "$@"
